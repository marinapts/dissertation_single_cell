knitr::opts_chunk$set(echo = TRUE)
suppressPackageStartupMessages({
library(scater) # BioConductor
library(SingleCellExperiment) # BioConductor
library(DropletUtils) # BioConductor
library(tidyverse) # CRAN
library(here) # CRAN
library(DT) # CRAN
library(pheatmap) # CRAN
})
BiocManager::install("scater")
suppressPackageStartupMessages({
library(scater) # BioConductor
library(SingleCellExperiment) # BioConductor
library(DropletUtils) # BioConductor
library(tidyverse) # CRAN
library(here) # CRAN
library(DT) # CRAN
library(pheatmap) # CRAN
})
BiocManager::install("DropletUtils")
library(scater) # BioConductor
library(SingleCellExperiment) # BioConductor
library(DropletUtils) # BioConductor
library(tidyverse) # CRAN
BiocManager::install("tidyverser")
BiocManager::install("tidyverse")
library(tidyverse) # CRAN
library(here) # CRAN
library(DT) # CRAN
library(pheatmap) # CRAN
BiocManager::install("here")
BiocManager::install("DT")
BiocManager::install("pheatmap")
library(here) # CRAN
library(DT) # CRAN
library(pheatmap) # CRAN
install.packages(c("tidyverse", "here", "DT", "pheatmap", "BiocManager"))
install.packages(c("tidyverse", "here", "DT", "pheatmap", "BiocManager"))
install.packages("tensorflow", repos = "http://cran.us.r-project.org")
tensorflow::install_tensorflow()
Ï…
yes
tensorflow::install_tensorflow()
install.packages("devtools", repos = "http://cran.us.r-project.org") # If not already installed
source('~/.active-rstudio-document', echo=TRUE)
devtools::install_github("Irrationone/cellassign")
suppressPackageStartupMessages({
library(scater) # BioConductor
library(SingleCellExperiment) # BioConductor
library(DropletUtils) # BioConductor
library(tidyverse) # CRAN
library(here) # CRAN
library(DT) # CRAN
library(pheatmap) # CRAN
})
knitr::opts_chunk$set(echo = TRUE,
cache = TRUE)
library(DropletUtils) # BioConductor
suppressPackageStartupMessages({
library(scater) # BioConductor
library(SingleCellExperiment) # BioConductor
library(DropletUtils) # BioConductor
library(tidyverse) # CRAN
library(here) # CRAN
library(DT) # CRAN
library(pheatmap) # CRAN
})
knitr::opts_chunk$set(echo = TRUE,
cache = TRUE)
install.packages(c("tidyverse", "here", "DT", "pheatmap", "BiocManager"))
BiocManager::install(c("scater", "SingleCellExperiment", "DropletUtils", "biomaRt"))
install.packages("tensorflow", repos = "http://cran.us.r-project.org")
install.packages("tensorflow", repos = "http://cran.us.r-project.org")
tensorflow::install_tensorflow()
install.packages("tensorflow", repos = "http://cran.us.r-project.org")
tensorflow::install_tensorflow()
tensorflow::install_tensorflow()
install.packages("tensorflow", repos = "http://cran.us.r-project.org")
tensorflow::install_tensorflow()
install.packages("devtools", repos = "http://cran.us.r-project.org") # If not already installed
install.packages("devtools", repos = "http://cran.us.r-project.org")
devtools::install_github("Irrationone/cellassign")
data_dir <- here("data", "outs", "filtered_gene_bc_matrices", "GRCh38")
print(data_dir)
sce <- read10xCounts(data_dir)
print(dir(data_dir))
sce <- read10xCounts(data_dir)
sce <- read10xCounts(data_dir)
library(Rtsne)
library(ggplot2)
library(repr)
library(rhdf5)
options(repr.plot.width=3, repr.plot.height=3)
install.packages('repr')
library(repr)
library(rhdf5)
options(repr.plot.width=3, repr.plot.height=3)
latent.dat <- read.table("latent_output.csv", header = F, sep = ",")
setwd("~/msc/dissertation/single_cell_analysis/scDeepCluster")
latent.dat <- read.table("latent_output.csv", header = F, sep = ",")
latent.dat
tsne.X <- Rtsne(latent.dat, max_iter = 1000)
Y <- h5read("scRNA_seq_data/10X_PBMC.h5", "Y")
Y
sne_plot.X <- data.frame(`x-tsne` = tsne.X$Y[,1], `y-tsne` = tsne.X$Y[,2],
truelabel = Y, check.names = F)
sne_plot.X
tsne_plot.X$truelabel <- factor(tsne_plot.X$truelabel, levels = c(0:max(Y)))
tsne_plot.X <- data.frame(`x-tsne` = tsne.X$Y[,1], `y-tsne` = tsne.X$Y[,2],
truelabel = Y, check.names = F)tsne_plot.X <- data.frame(`x-tsne` = tsne.X$Y[,1], `y-tsne` = tsne.X$Y[,2],
truelabel = Y, check.names = F)
rm(sne_plot.X)
tsne_plot.X <- data.frame(`x-tsne` = tsne.X$Y[,1], `y-tsne` = tsne.X$Y[,2],
truelabel = Y, check.names = F)
tsne_plot.X
tsne_plot.X$truelabel <- factor(tsne_plot.X$truelabel, levels = c(0:max(Y)))
ggplot(tsne_plot.X) + geom_point(aes(x=`x-tsne`, y=`y-tsne`, color=truelabel), size=0.5) +
labs(color='true label') +
ggtitle("scDeepCluster latent space") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
legend.key = element_rect(fill = 'white', colour = 'white'), legend.position="none",
axis.title.y=element_blank(), axis.title.x=element_blank())
